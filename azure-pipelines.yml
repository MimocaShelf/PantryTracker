# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- dev

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    echo "installing project dependencies..."
    npm install
  displayName: 'Install Dependencies'

- script: |
    echo "installing project dependencies..."
    cd server
    npm install
  displayName: 'Install Backend Dependencies'

- script: |
    echo "initalising dummy database..."
    echo "adding dummy data..."
  displayName: 'Create Test Database'

- script: |
    echo "starting backend server..."
    cd server
    node server.js &
    sleep 5
  displayName: 'Start Backend server'

- script: |
    echo "starting website..."
    npm run build
  displayName: 'Start Vite'

- script: |
    echo "commencing unit testing..."
    npm run test
  displayName: 'Run Unit Tests'

- script: |
    echo "clearing dummy database..."
  displayName: 'Remove Test Database'

- script: |
    echo "sending build status notification to communication platforms"
    zip -r '$(Build.ArtifactStagingDirectory)'/dist.zip dist
  displayName: 'Zip Build Folder'



- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureRmWebAppDeployment@5
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(cdef35dd-a2e4-477b-9bb5-aa674344c828)'
    appType: 'webAppLinux'
    WebAppName: 'PantryTracker'
    deployToSlotOrASE: true
    ResourceGroupName: 'PantryTracker_group'
    SlotName: 'production'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
    RuntimeStack: 'NODE|22-lts'
    StartupCommand: 'npm run dev'
    DeploymentTypeLinux: 'oneDeploy'